{{- $pgCfg := required "Missing global.db value" .Values.global.db.secret.data }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.Name" . }}-db-migrate
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "-9"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    {{- include "gitcall.labels" . | nindent 4 }}
spec:
  activeDeadlineSeconds: 180 # 3min
  ttlSecondsAfterFinished: 360 # 6min
  parallelism: 1
  completions: 1
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "gitcall.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      initContainers:
        - name: init-wait-postgresql
          image: {{ include "common.initContainers.image" . }}
          command: [ "sh", "-c", "until nc -zvw1 {{ $pgCfg.dbhost }} {{ $pgCfg.dbport }}; do echo waiting for dependencies; sleep 2; done;" ]
      {{- include "common.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: main
          image: {{ include "gitcall.gitcall-migrations.imageUrl" . }}
          imagePullPolicy: {{ .Values.migratorImage.pullPolicy | quote }}
          command: [ "cz" ]
          args:
            - "ops"
            - "migrator"
            - "migrate"
            - "--dir=/migrations/migrations"
            - "--migrator-username={{ $pgCfg.dbuser }}"
            - "--migrator-password={{ $pgCfg.dbpwd }}"
            - "--owner-username={{ $pgCfg.dbuser }}"
            - "--app-username={{ $pgCfg.dbuser }}"
            - "--host={{ $pgCfg.dbhost }}"
            - "--port={{ $pgCfg.dbport }}"
            - '--db={{ .Values.global.gitcall.db_name | default "git_call" }}'
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsUser: 501
            runAsGroup: 501
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop: [ NET_ADMIN, SYS_ADMIN, MAC_ADMIN, SETUID, SETGID, FOWNER, CHOWN, MKNOD ]
      volumes:
        - name: tmp
          emptyDir: { }
